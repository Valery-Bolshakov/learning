print('Методы строк: \n')

# Длина строки
s = 'hello'
print(len(s))

# S.capitalize() - переводит первый символ строки в верхний регистр а остальные в нижний, исходная строка не изменяется
s = 'HELLO'
print(s.capitalize())
print(s)

# S.center(width, [fill]) - Возвращает отцентрованную строку, по краям которой стоит символ fill (пробел по умолчанию)
print(s.center(20))
print(s.center(20, '!'))

# S.count(str, [start],[end]) - Возвращает количество непересекающихся вхождений подстроки
# в диапазоне [начало, конец] (0 и длина строки по умолчанию) (РЕГИСТРОЗАВИСИМО)
print(s.count('L'))
print(s.count('l'))
print(s.count('L', 0, 3))

s = 'hello world'
# S.find(str, [start],[end]) - Поиск подстроки в строке. Возвращает номер первого вхождения или -1(если не найден)
# S.index(str, [start],[end]) - Поиск подстроки в строке. Возвращает номер первого вхождения или вызывает ValueError

print(s.find('l'))
print(s.find('o'))
print(s.find('a'))

print(s.index('o'))

# S.replace(шаблон, замена) - Замена шаблона
print(s.replace('l', 't'))

# S.split(символ) - Разбиение строки в Список по разделителю (по умолчанию разделитель - пробел)
print(s.split())
print(s.split(','))

# S.isdigit() 	Состоит ли строка из цифр. Возвращает True or False
# S.isalpha()	Состоит ли строка из букв. Если есть посторонние символы(пробел или запятая) то False
# S.isalnum()	Состоит ли строка из цифр или букв
# S.islower()	Состоит ли строка из символов в нижнем регистре
# S.isupper()	Состоит ли строка из символов в верхнем регистре

print(s.isdigit())
print(s.isalpha())
print(s.isalnum())
