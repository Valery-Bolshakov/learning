print('Изменяемые и неизменяемые объекты\n')

'''
id(obj) -> int Возвращает идентификатор указанного объекта.
obj : Объект, идентификатор которого требуется получить.
Возвращает целое число, гарантированно являющееся уникальным и постоянным для объекта на время его существования.
'''
x = 10
print(x, id(x))
x = 20
print(x, id(x))
y = 10
print(y, id(y))
'''
Переменные являются ссылками на обьекты хранящиеся в памяти, у каждого обьекта есть уникальный идентификатор.
В данном примере мы переназначили ссылку для переменной с обьекта 10 на обьект 20
Строки являются неизменяемыми типами данных - по этому идентификаторы у них будут разными
'''

# s = 'hello'
# print(s, id(s))
# s += ' world'
# print(s, id(s))  # обе переменные s являются ссылками на 2 разных обьекта в памяти

li = [1, 2, 3]
print(li, id(li))
li.append(5)
print(li, id(li))  # В обоих случаях идентификаторы одинаковые
'''Если обьект является изменяемым типом (например список) то после изменения у него остается тот же идентификатор'''
print('\n')

x = 10
y = x
print(x, id(x))
print(y, id(y))
'''2 разных обьекта но идентификаторы одинаковые'''

print('\n')
x = 15
print(x, id(x))
print(y, id(y))
'''Тут мы переназначили х, но у остался прежним и ссылается на обьект 10. Идентификаторы будут разными'''

l1 = [1, 2, 3]
l2 = l1  # l1 и l2 это ссылки на один и тот же обьект в памяти с одинаковыми id
print(l1, id(l1))
print(l2, id(l2))

l1.append(6)  # при изменении изменяемого обьекта его id не изменяется
print(l1, id(l1))
print(l2, id(l2))

l2.append(9)  # при изменении изменяемого обьекта его id не изменяется
print(l1, id(l1))
print(l2, id(l2), '\n')

'''для создания отдельного идентичного обьекта надо использовать функцию copy'''
l1 = [1, 2, 3]
l2 = l1.copy()
print(l1, id(l1))
print(l2, id(l2), '\n')  # получили два разных обьекта с одинаковыми значениями и разными id

# этого же можно достич используя срез. Он создает новый обьект:
l2 = l1[:]
print(l1, id(l1))
print(l2, id(l2), '\n')  # получили два разных обьекта с одинаковыми значениями и разными id

'''
DEL - инструкция которая удаляет переменные, элементы, срезы и атрибуты.
'''
x = 10
print(x)
del x
print(x)  # выведет ошибку так как такого обьекта больше не существует
