print('Пользовательские функции. Часть 2\n')

'''
    Позиционные аргументы:
Обычно используется сокращённое название — args (arguments).
Это аргументы, передаваемые в вызов в определённой последовательности (на определённых позициях), 
без указания их имён.'''

'''
    Именованные аргументы:
    (следуют ВСЕГДА только после позиционных)
Обычно используется сокращённое название — kwargs (keyword arguments).
Это аргументы, передаваемые в вызов при помощи имени (идентификатора), либо словаря с его распаковкой при помощи **.

print('hello', sep='', end='') == print('hello', end='', sep='')
sep and end - являются именованными аргументами, ихъ позиция(последовательность) не важна.
Так же они являются опциональными(не обязательными)
'''


def get_sum(a, b, c=1, d=3):  # аргументы (a, b) - Позиционные, а (c=1, d=3) - Именованные
    return a + b + c + d


print(get_sum(1, 3, 5, 7))  # аргументы (c, d) передавать не обязательно, у них уже есть значения в функции
print(get_sum(1, 3, d=5))  # = 10, Здесь 'c' осталосьпрежней (с=1), а 'd' мы переназначили (d=5)

'''
    Переменное(произвольное) колличество аргументов (*args, **kwargs):
*args, **kwargs Это условные названия, можно назвать как угодно (*name, **value) Важны только * и **
*args, **kwargs - Опциональные, их можно задавать при вызове функции а можно и опустить

def get_sum1(*args, **kwargs):
    функция будет принимать произвольное колличество элементов
    *args - будут преобразованы в Кортеж
    **kwargs - будут преобразованы в Словарь
    pass
'''


def get_sum2(*args):
    print(args)


get_sum2(2, 6, 3)  # (2, 6, 3) аргументы собрались в кортеж


def get_sum3(*args):
    return sum(args)


print(get_sum3(2, 6, 3))  # = 11 получили Сумму чисел кортежа


def func(**kwargs):
    print(kwargs, '\n')


func(a=3, b=7, c=23)  # {'a': 3, 'b': 7, 'c': 23} полусили Словарь (ключ: значение)

'''Аргументы можно Комбинировать, не забывая о их порядке (сперва *args, затем **kwargs)'''


def f(a, x, *args, **kwargs):
    # функция сперва принимает 2 строго заданых Позиционных аргумента, далее еще Произвольное колличество
    # Позиционных аргументов(будут преобразованы в кортеж), затем Произвольнок коллич Именованныех (к словарю)
    print(a)  # 1
    print(x)  # 2
    print(args)  # (3, 4, 5)
    print(kwargs)  # {'b': 'test', 'c': 'hi'}


f(1, 2, 3, 4, 5, b='test', c='hi')
