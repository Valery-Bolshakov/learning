import os
# import random
# import random as r

# from random import randint, shuffle
from random import *

# import libs  # можно задать псевдоним для удобства
# from libs import get_count, get_len

print('Модули в Python\n')
'''
    Это отдельный файл, содержащий какой-то код. Он может быть как исполняемым, так и подключаемым. 
    Исполняемый модуль содержит код, который самостоятельно выполняет какие-то действия, а подключаемый 
представляет из себя набор функций, классов и объектов, которые можно использовать для решения задач 
в другой программе.

    import os, random - Рекомендуется импортировать их на разных строчках, за исключением случаев импорта
нескольких однотипных модулей.
'''

# как обратиться к этому модулю:
print(os.getcwd())  # C:\Python\learning\theory. getcwd метод позволяющий получить путь к текущей дирректории

# print(random.randint(1, 100))  # метод randint будет генерировать случайное число от 1 до 100

'''
    После импорта модулей - их названия Становятся Переменными, с помощью которых вызываем методы данных модулей

    Однако в случае если названия модулей является неудобными - им можно назначать Псевдонимы: 'модуль as псевдоним'
import random as r - 'r' является псевдонимом и теперь при использовании модуля для вызова указывают 
не 'random.метод' а 'r.метод'
'''
# print(r.randint(1, 100))  # метод randint будет генерировать случайное число от 1 до 100

'''
    В случаях когда не нужны все методы подключаемого модуля - можно подключить только Нужные, следующим образом:
from random import randint, shuffle
Таким образом мы подключим только нужные методы. И при их вызове можно опускать переменную random
'''
print(randint(1, 100))

l = [1, 2, 3, 4, 5]
shuffle(l)  # перемешивает список
print(l, '\n')  # [4, 2, 1, 5, 3]

'''
    Так же можно импортировать Все методы: 'from random import *'. Символ '*' символизирует 'all'
'''

'''
    Можно импортировать один модуль 2 раза, обычно и с псевдонимом. И обращаться по любому варианту:
import os
import os as o
'''

'''
    Напишем собственный модуль. Создаем файл libs в текущей дирректории.
Напишем в нем 2 функции (count and len) и подключим их к данному файлу:
import libs
Теперь нам доступны 2 функции(метода) которые мы можем использовать в коде
'''

import libs

# print(libs.get_count('hello', 'l'))  # 2
# print(libs.get_len('hello'))  # 5

# print(get_count('hello', 'l'))  # 2
# print(get_len('hello'))  # 5

'''
    Можно ли использовать модуль как Самостоятельную программу? Да. При импортировании весь код с модуля 
все равно что копируется и вставляется в файл. И выполняется в этом файле.

    Что бы только импортировать все нужные функции/методы из подключаемого файла и избежать в 
подключаемом файле Выполнения всего кода(ненужные принты  и т.д.) - Код где что то выводится заключают 
в стандартную конструкцию:

    if __name__ == __main__
        pass
'''

print(__name__)  # __main__

'''
    Функциям можно присваивать Переменные, для удобства использования:
'''

f = libs.get_count  # без круглых скобок!
# теперь данную переменную можно использовать при вызове этой функции

print(f('hello', 'l'))  # 2


def get_sum(a, b):
    return a + b


func = get_sum
print(func(2, 5))  # 7
